{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","console","log","updateTimer","time","Math","floor","pad","value","String","padStart","textContent","timer","selector","startTimerBack"],"mappings":";AAmDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnDA,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAG1BI,EAAAA,WACuB,SAAA,EAAA,GAAbC,IAAAA,EAAAA,EAAAA,WAAa,EAAA,KAAA,GACjBA,KAAAA,WAAaA,EA0C1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,iBAvCI,MAAA,WAAiB,IAAA,EAAA,KAEbC,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,EAAKL,WAAaE,EACH,EAAA,EAAKI,kBAAkBD,GAAlDZ,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE1BS,QAAQC,IAAOf,GAAAA,OAAAA,EAAQG,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,IACxC,EAAKW,YAAY,CAAChB,KAAAA,EAAMG,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,KAEtC,OA6BX,CAAA,IAAA,oBA1BI,MAAA,SAAkBY,GAMP,MAAA,CAACjB,KALKkB,KAAKC,MAAMF,EAAQ,OAKlBd,MAJA,KAAKiB,IAAIF,KAAKC,MAAOF,EAAQ,MAAyB,OAI/Cb,KAHR,KAAKgB,IAAIF,KAAKC,MAAOF,EAAQ,KAAoB,MAGnCZ,KAFd,KAAKe,IAAIF,KAAKC,MAAOF,EAAQ,IAAc,SAsBhE,CAAA,IAAA,MAjBI,MAAA,SAAII,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAgBzC,CAAA,IAAA,cAbI,MAAA,SAAuC,GAA1BvB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAChCN,EAAKC,KAAKwB,YAAiBxB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMqB,YAAiBrB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKoB,YAAiBpB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKmB,YAAiBnB,GAAAA,OAAAA,OAS/B,EA5COC,GAuCDmB,EAAQ,IAAInB,EAAe,CAC7BoB,SAAU,WACVnB,WAAY,IAAIG,KAAK,kBAGzBe,EAAME","file":"src.dfbd02e8.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    mins: document.querySelector('[data-value=\"mins\"]'),\n    secs: document.querySelector('[data-value=\"secs\"]')\n }\n \n class CountdownTimer {\n    constructor({targetDate}) {\n        this.targetDate = targetDate;\n    }\n\n    startTimerBack() {\n\n        setInterval(() => {\n            const currentTime = Date.now()\n            const deltaTime =  this.targetDate - currentTime;\n            const {days, hours, mins, secs} = this.getTimeComponents(deltaTime);\n\n            console.log(`${days}:${hours}:${mins}:${secs}`);\n            this.updateTimer({days, hours, mins, secs})\n           \n        }, 1000)\n    }\n\n    getTimeComponents(time) {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n        return {days, hours, mins, secs};\n    };\n\n    pad(value) {\n        return String(value).padStart(2, '0')\n    }\n\n    updateTimer({days, hours, mins, secs}) {\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n}\n};\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 01, 2021'),\n  });\n\ntimer.startTimerBack();\n"]}